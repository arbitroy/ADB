/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package adb;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author austine
 */
public class StaffDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form StaffDashBoard
     */
    public StaffDashBoard() {
        initComponents();
        SelectProd();
        SelectpProd();
        SelectCust();
        SelectcCust();
        GetToday();
        DefaultTableModel customerModel = (DefaultTableModel) CustomerTable2.getModel();
        JTableFiller.fillJTable(customerModel, "customers");
        DefaultTableModel orderModel = (DefaultTableModel) orderTable.getModel();
        JTableFiller.fillJTable(orderModel, "orders");
        DefaultTableModel preorderModel = (DefaultTableModel) preorderTable.getModel();
        JTableFiller.fillJTable(preorderModel, "pre_orders");
        DefaultTableModel itemModel = (DefaultTableModel) itemTable.getModel();
        JTableFiller.fillJTable(itemModel, "Item");
    }
Connection Con = null;
    Statement St = null;
    ResultSet Rs = null;
    Connection connection = null;
    ResultSet rs = null;
     public void SelectProd(){
        try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            St =Con.createStatement();
            Rs = St.executeQuery("select * from item");
            ProductTable.setModel(DbUtils.resultSetToTableModel(Rs));
            ProductTable1.setModel(DbUtils.resultSetToTableModel(Rs));
                    }catch (SQLException e){
                        e.printStackTrace();
            
        }
    }
     public void SelectpProd(){
        try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            St =Con.createStatement();
            Rs = St.executeQuery("select * from item");
            ProductTable1.setModel(DbUtils.resultSetToTableModel(Rs));
                    }catch (SQLException e){
                        e.printStackTrace();
            
        }
    }
    public void SelectCust(){
        try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            St =Con.createStatement();
            Rs = St.executeQuery("select * from customers");
            CustomerTable.setModel(DbUtils.resultSetToTableModel(Rs));
            CustomerTable1.setModel(DbUtils.resultSetToTableModel(Rs));
                    }catch (SQLException e){
                        e.printStackTrace();
            
        }
    }
    public void SelectcCust(){
        try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            St =Con.createStatement();
            Rs = St.executeQuery("select * from customers");
           
            CustomerTable1.setModel(DbUtils.resultSetToTableModel(Rs));
                    }catch (SQLException e){
                        e.printStackTrace();
            
        }
    }
    public void GetToday(){
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime now = LocalDateTime.now();
        Datelbl.setText(dtf.format(now));
    }   
   
    int flag = 0,productid,oldqty,custid;
    Float Iprice;
    String ProdName;int i =1,Uprice,tot=0,total;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas = new javax.swing.JPanel();
        sideBar = new javax.swing.JPanel();
        cusButton = new javax.swing.JButton();
        ordersButton = new javax.swing.JButton();
        preordersB = new javax.swing.JButton();
        reportB = new javax.swing.JButton();
        items = new javax.swing.JButton();
        cardPanel1 = new javax.swing.JPanel();
        orderPanel1 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        CustNamelbl = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        Datelbl = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        ViewOrders = new javax.swing.JButton();
        Qtytb = new javax.swing.JTextField();
        AddToOrder = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTbl = new javax.swing.JTable();
        TotAmtlbl = new javax.swing.JTextField();
        staffId1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pay_info = new javax.swing.JTextField();
        itemPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pric = new javax.swing.JTextField();
        AddItem = new javax.swing.JButton();
        DeleteItem = new javax.swing.JButton();
        preorder = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ProductTable1 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        CustomerTable1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        BillId1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        CustNamelbl1 = new javax.swing.JTextField();
        AddBtn2 = new javax.swing.JButton();
        Qtytb1 = new javax.swing.JTextField();
        AddToOrder1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        BillTbl1 = new javax.swing.JTable();
        TotAmtlbl1 = new javax.swing.JTextField();
        BillId2 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        BillId3 = new javax.swing.JTextField();
        AddBtn3 = new javax.swing.JButton();
        customerPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        first_name = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        last_name = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        AddCustomer = new javax.swing.JButton();
        DeleteCustomer = new javax.swing.JButton();
        reports = new javax.swing.JTabbedPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        CustomerTable2 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        preorderTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Staff Dashboard");

        canvas.setBackground(new java.awt.Color(255, 255, 255));

        sideBar.setBackground(new java.awt.Color(0, 51, 255));

        cusButton.setBackground(new java.awt.Color(0, 51, 255));
        cusButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cusButton.setForeground(new java.awt.Color(255, 255, 255));
        cusButton.setText("Customers");
        cusButton.setBorder(null);
        cusButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusButtonMouseClicked(evt);
            }
        });
        cusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cusButtonActionPerformed(evt);
            }
        });

        ordersButton.setBackground(new java.awt.Color(0, 51, 255));
        ordersButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ordersButton.setForeground(new java.awt.Color(255, 255, 255));
        ordersButton.setText("Orders");
        ordersButton.setBorder(null);
        ordersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordersButtonActionPerformed(evt);
            }
        });

        preordersB.setBackground(new java.awt.Color(0, 51, 255));
        preordersB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        preordersB.setForeground(new java.awt.Color(255, 255, 255));
        preordersB.setText("Preorders");
        preordersB.setBorder(null);
        preordersB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preordersBActionPerformed(evt);
            }
        });

        reportB.setBackground(new java.awt.Color(0, 51, 255));
        reportB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reportB.setForeground(new java.awt.Color(255, 255, 255));
        reportB.setText("Reports");
        reportB.setBorder(null);
        reportB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBActionPerformed(evt);
            }
        });

        items.setBackground(new java.awt.Color(0, 51, 255));
        items.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        items.setForeground(new java.awt.Color(255, 255, 255));
        items.setText("Items");
        items.setBorder(null);
        items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sideBarLayout = new javax.swing.GroupLayout(sideBar);
        sideBar.setLayout(sideBarLayout);
        sideBarLayout.setHorizontalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cusButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(preordersB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
            .addComponent(items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ordersButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reportB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sideBarLayout.setVerticalGroup(
            sideBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(ordersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(items, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 152, Short.MAX_VALUE)
                .addComponent(preordersB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(reportB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cardPanel1.setLayout(new java.awt.CardLayout());

        orderPanel1.setBackground(new java.awt.Color(255, 255, 255));
        orderPanel1.setPreferredSize(new java.awt.Dimension(1000, 700));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel24.setText("CUSTOMER LIST");
        jLabel24.setName("Inventory"); // NOI18N

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel21.setText("PRODUCT LIST");
        jLabel21.setName("Inventory"); // NOI18N

        ProductTable.setBackground(new java.awt.Color(204, 204, 255));
        ProductTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProdId", "Name", "Quantity"
            }
        ));
        ProductTable.setCellSelectionEnabled(true);
        ProductTable.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        ProductTable.setEditingColumn(0);
        ProductTable.setEditingRow(0);
        ProductTable.setName(""); // NOI18N
        ProductTable.setRowHeight(25);
        ProductTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProductTable);

        CustomerTable.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustId", "Name", "Phone"
            }
        ));
        CustomerTable.setRowHeight(25);
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(CustomerTable);

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 204));
        jLabel6.setText("CustomerName:");
        jLabel6.setName("Inventory"); // NOI18N

        CustNamelbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CustNamelbl.setText("CustName");
        CustNamelbl.setBorder(null);

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 204));
        jLabel22.setText("Date:");
        jLabel22.setName("Inventory"); // NOI18N

        Datelbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Datelbl.setText("Date");
        Datelbl.setBorder(null);

        AddBtn.setBackground(new java.awt.Color(0, 0, 255));
        AddBtn.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn.setText("Add Order");
        AddBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtnMouseClicked(evt);
            }
        });

        ViewOrders.setBackground(new java.awt.Color(0, 0, 255));
        ViewOrders.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        ViewOrders.setForeground(new java.awt.Color(255, 255, 255));
        ViewOrders.setText("Cancel Order");
        ViewOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewOrdersMouseClicked(evt);
            }
        });

        Qtytb.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Qtytb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QtytbActionPerformed(evt);
            }
        });

        AddToOrder.setBackground(new java.awt.Color(0, 0, 255));
        AddToOrder.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddToOrder.setForeground(new java.awt.Color(255, 255, 255));
        AddToOrder.setText("AddToOrder");
        AddToOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddToOrderMouseClicked(evt);
            }
        });
        AddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToOrderActionPerformed(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 204));
        jLabel25.setText("Quantity:");
        jLabel25.setName("Inventory"); // NOI18N

        BillTbl.setBackground(new java.awt.Color(204, 204, 255));
        BillTbl.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        BillTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemId", "Name", "Quantity", "price", "cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        BillTbl.setCellSelectionEnabled(true);
        BillTbl.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        BillTbl.setEditingColumn(0);
        BillTbl.setEditingRow(0);
        BillTbl.setName(""); // NOI18N
        BillTbl.setRowHeight(25);
        BillTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BillTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(BillTbl);
        BillTbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        TotAmtlbl.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        TotAmtlbl.setForeground(new java.awt.Color(0, 0, 255));
        TotAmtlbl.setText("Total amount");
        TotAmtlbl.setBorder(null);
        TotAmtlbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotAmtlblActionPerformed(evt);
            }
        });

        staffId1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 204));
        jLabel30.setText("Staffid:");
        jLabel30.setName("Inventory"); // NOI18N

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 204));
        jLabel14.setText("Payment info:");
        jLabel14.setName("Inventory"); // NOI18N

        pay_info.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        javax.swing.GroupLayout orderPanel1Layout = new javax.swing.GroupLayout(orderPanel1);
        orderPanel1.setLayout(orderPanel1Layout);
        orderPanel1Layout.setHorizontalGroup(
            orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(121, 121, 121))
            .addGroup(orderPanel1Layout.createSequentialGroup()
                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, orderPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(orderPanel1Layout.createSequentialGroup()
                                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel22)
                                    .addComponent(AddBtn))
                                .addGap(18, 18, 18)
                                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ViewOrders)
                                    .addComponent(Datelbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CustNamelbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel14)
                            .addComponent(jLabel30)
                            .addGroup(orderPanel1Layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pay_info, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(staffId1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Qtytb, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddToOrder))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, orderPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderPanel1Layout.createSequentialGroup()
                                .addComponent(TotAmtlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, orderPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 85, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        orderPanel1Layout.setVerticalGroup(
            orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Qtytb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddToOrder)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TotAmtlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(orderPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30)
                            .addComponent(staffId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(pay_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(CustNamelbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(Datelbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(orderPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddBtn)
                            .addComponent(ViewOrders))))
                .addContainerGap())
        );

        cardPanel1.add(orderPanel1, "Orders");

        itemPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 204));
        jLabel13.setText("Item name:");
        jLabel13.setName("Inventory"); // NOI18N

        itemName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        itemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNameActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("Price");
        jLabel4.setName("Inventory"); // NOI18N

        pric.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        pric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricActionPerformed(evt);
            }
        });

        AddItem.setBackground(new java.awt.Color(0, 0, 255));
        AddItem.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddItem.setForeground(new java.awt.Color(255, 255, 255));
        AddItem.setText("Add");
        AddItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemMouseClicked(evt);
            }
        });
        AddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemActionPerformed(evt);
            }
        });

        DeleteItem.setBackground(new java.awt.Color(0, 0, 255));
        DeleteItem.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        DeleteItem.setForeground(new java.awt.Color(255, 255, 255));
        DeleteItem.setText("Delete");
        DeleteItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteItemMouseClicked(evt);
            }
        });
        DeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemPanel1Layout = new javax.swing.GroupLayout(itemPanel1);
        itemPanel1.setLayout(itemPanel1Layout);
        itemPanel1Layout.setHorizontalGroup(
            itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanel1Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemPanel1Layout.createSequentialGroup()
                        .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel13))
                        .addGap(58, 58, 58)
                        .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pric, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(itemPanel1Layout.createSequentialGroup()
                        .addComponent(AddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206)
                        .addComponent(DeleteItem)))
                .addGap(0, 321, Short.MAX_VALUE))
        );
        itemPanel1Layout.setVerticalGroup(
            itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanel1Layout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(20, 20, 20)
                .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pric, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(itemPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(320, Short.MAX_VALUE))
        );

        cardPanel1.add(itemPanel1, "Item");

        preorder.setBackground(new java.awt.Color(255, 255, 255));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel26.setText("CUSTOMER LIST");
        jLabel26.setName("Inventory"); // NOI18N

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel27.setText("PRODUCT LIST");
        jLabel27.setName("Inventory"); // NOI18N

        ProductTable1.setBackground(new java.awt.Color(204, 204, 255));
        ProductTable1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ProductTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProdId", "Name", "Quantity"
            }
        ));
        ProductTable1.setCellSelectionEnabled(true);
        ProductTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        ProductTable1.setEditingColumn(0);
        ProductTable1.setEditingRow(0);
        ProductTable1.setName(""); // NOI18N
        ProductTable1.setRowHeight(25);
        ProductTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProductTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ProductTable1);

        CustomerTable1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CustomerTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustId", "Name", "Phone"
            }
        ));
        CustomerTable1.setRowHeight(25);
        CustomerTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(CustomerTable1);

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 204));
        jLabel16.setText("PreOrderDate ");
        jLabel16.setName("Inventory"); // NOI18N

        BillId1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 204));
        jLabel7.setText("CustomerName:");
        jLabel7.setName("Inventory"); // NOI18N

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 204));
        jLabel28.setText("CollectionDate:");
        jLabel28.setName("Inventory"); // NOI18N

        CustNamelbl1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CustNamelbl1.setText("CustName");
        CustNamelbl1.setBorder(null);

        AddBtn2.setBackground(new java.awt.Color(0, 0, 255));
        AddBtn2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddBtn2.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn2.setText("Delete Order");
        AddBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtn2ActionPerformed(evt);
            }
        });

        Qtytb1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Qtytb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Qtytb1ActionPerformed(evt);
            }
        });

        AddToOrder1.setBackground(new java.awt.Color(0, 0, 255));
        AddToOrder1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddToOrder1.setForeground(new java.awt.Color(255, 255, 255));
        AddToOrder1.setText("AddToOrder");
        AddToOrder1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddToOrder1MouseClicked(evt);
            }
        });
        AddToOrder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToOrder1ActionPerformed(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 204));
        jLabel29.setText("Quantity:");
        jLabel29.setName("Inventory"); // NOI18N

        BillTbl1.setBackground(new java.awt.Color(204, 204, 255));
        BillTbl1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        BillTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemId", "Name", "Quantity", "price", "cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        BillTbl1.setCellSelectionEnabled(true);
        BillTbl1.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        BillTbl1.setEditingColumn(0);
        BillTbl1.setEditingRow(0);
        BillTbl1.setName(""); // NOI18N
        BillTbl1.setRowHeight(25);
        BillTbl1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BillTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BillTbl1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(BillTbl1);
        BillTbl1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        TotAmtlbl1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        TotAmtlbl1.setForeground(new java.awt.Color(0, 0, 255));
        TotAmtlbl1.setText("Total amount");
        TotAmtlbl1.setBorder(null);
        TotAmtlbl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotAmtlbl1ActionPerformed(evt);
            }
        });

        BillId2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 204));
        jLabel17.setText("StaffId ");
        jLabel17.setName("Inventory"); // NOI18N

        BillId3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        BillId3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BillId3ActionPerformed(evt);
            }
        });

        AddBtn3.setBackground(new java.awt.Color(0, 0, 255));
        AddBtn3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddBtn3.setForeground(new java.awt.Color(255, 255, 255));
        AddBtn3.setText("Add Order");
        AddBtn3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBtn3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout preorderLayout = new javax.swing.GroupLayout(preorder);
        preorder.setLayout(preorderLayout);
        preorderLayout.setHorizontalGroup(
            preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preorderLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(121, 121, 121))
            .addGroup(preorderLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preorderLayout.createSequentialGroup()
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(preorderLayout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addGap(18, 18, 18)
                                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddBtn2)
                                    .addComponent(BillId2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(preorderLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(CustNamelbl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Qtytb1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(AddToOrder1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(preorderLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(preorderLayout.createSequentialGroup()
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BillId1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BillId3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preorderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TotAmtlbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(preorderLayout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(AddBtn3)
                    .addContainerGap(805, Short.MAX_VALUE)))
        );
        preorderLayout.setVerticalGroup(
            preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preorderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(preorderLayout.createSequentialGroup()
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(preorderLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Qtytb1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddToOrder1))
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preorderLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TotAmtlbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(preorderLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(BillId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(preorderLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(BillId3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(preorderLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(CustNamelbl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28)
                                    .addComponent(BillId2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(AddBtn2)
                        .addGap(134, 134, 134))))
            .addGroup(preorderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preorderLayout.createSequentialGroup()
                    .addContainerGap(510, Short.MAX_VALUE)
                    .addComponent(AddBtn3)
                    .addGap(135, 135, 135)))
        );

        cardPanel1.add(preorder, "Preorders");

        customerPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 204));
        jLabel18.setText("First name:");
        jLabel18.setName("Inventory"); // NOI18N

        first_name.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        first_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                first_nameActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("Last name:");
        jLabel8.setName("Inventory"); // NOI18N

        last_name.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        last_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_nameActionPerformed(evt);
            }
        });

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 204));
        jLabel19.setText("Phone number:");
        jLabel19.setName("Inventory"); // NOI18N

        phone.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 204));
        jLabel20.setText("Email:");
        jLabel20.setName("Inventory"); // NOI18N

        email.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setText("City: ");
        jLabel9.setName("Inventory"); // NOI18N

        city.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityActionPerformed(evt);
            }
        });

        AddCustomer.setBackground(new java.awt.Color(0, 0, 255));
        AddCustomer.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        AddCustomer.setForeground(new java.awt.Color(255, 255, 255));
        AddCustomer.setText("Add");
        AddCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddCustomerMouseClicked(evt);
            }
        });
        AddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustomerActionPerformed(evt);
            }
        });

        DeleteCustomer.setBackground(new java.awt.Color(0, 0, 255));
        DeleteCustomer.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        DeleteCustomer.setForeground(new java.awt.Color(255, 255, 255));
        DeleteCustomer.setText("Delete");
        DeleteCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteCustomerMouseClicked(evt);
            }
        });
        DeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customerPanel1Layout = new javax.swing.GroupLayout(customerPanel1);
        customerPanel1.setLayout(customerPanel1Layout);
        customerPanel1Layout.setHorizontalGroup(
            customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanel1Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(customerPanel1Layout.createSequentialGroup()
                        .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel18))
                        .addGap(58, 58, 58)
                        .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(customerPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(customerPanel1Layout.createSequentialGroup()
                            .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DeleteCustomer))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, customerPanel1Layout.createSequentialGroup()
                            .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel20)
                                .addComponent(jLabel9))
                            .addGap(120, 120, 120)
                            .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 322, Short.MAX_VALUE))
        );
        customerPanel1Layout.setVerticalGroup(
            customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customerPanel1Layout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(20, 20, 20)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addGroup(customerPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        cardPanel1.add(customerPanel1, " Customer");

        reports.setBackground(new java.awt.Color(255, 255, 255));
        reports.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        CustomerTable2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CustomerTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustId", "First Name", "Last Name", "Phone Number", "email", "City"
            }
        ));
        CustomerTable2.setRowHeight(25);
        CustomerTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTable2MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(CustomerTable2);

        reports.addTab("Customer", jScrollPane7);

        itemTable.setBackground(new java.awt.Color(204, 204, 255));
        itemTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProdId", "Name", "Price"
            }
        ));
        itemTable.setCellSelectionEnabled(true);
        itemTable.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        itemTable.setEditingColumn(0);
        itemTable.setEditingRow(0);
        itemTable.setName(""); // NOI18N
        itemTable.setRowHeight(25);
        itemTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(itemTable);

        reports.addTab("Item", jScrollPane8);

        orderTable.setBackground(new java.awt.Color(204, 204, 255));
        orderTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "item", "quantity", "cost", "customer", "total", "Order Date"
            }
        ));
        orderTable.setCellSelectionEnabled(true);
        orderTable.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        orderTable.setEditingColumn(0);
        orderTable.setEditingRow(0);
        orderTable.setName(""); // NOI18N
        orderTable.setRowHeight(25);
        orderTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(orderTable);

        reports.addTab("Order", jScrollPane9);

        preorderTable.setBackground(new java.awt.Color(204, 204, 255));
        preorderTable.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        preorderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PreorderDate", "Customer name", "collection date", "Staff name", "item", "Quantity"
            }
        ));
        preorderTable.setCellSelectionEnabled(true);
        preorderTable.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));
        preorderTable.setEditingColumn(0);
        preorderTable.setEditingRow(0);
        preorderTable.setName(""); // NOI18N
        preorderTable.setRowHeight(25);
        preorderTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        preorderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                preorderTableMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(preorderTable);

        reports.addTab("Preorder", jScrollPane10);

        cardPanel1.add(reports, "report");

        javax.swing.GroupLayout canvasLayout = new javax.swing.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(canvasLayout.createSequentialGroup()
                .addComponent(sideBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 969, Short.MAX_VALUE))
            .addGroup(canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, canvasLayout.createSequentialGroup()
                    .addGap(0, 151, Short.MAX_VALUE)
                    .addComponent(cardPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cardPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE))
        );

        getContentPane().add(canvas, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TotAmtlblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotAmtlblActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotAmtlblActionPerformed

    private void BillTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillTblMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BillTblMouseClicked

    private void AddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToOrderActionPerformed
        if(flag == 0 || Qtytb.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Select Product and Enter Quantity");
        }
        else
        {
            
            tot = (int) (Iprice*Integer.valueOf(Qtytb.getText()));
            Vector v = new Vector();
            v.add(i);
            v.add(ProdName);
            v.add(Qtytb.getText());
            v.add(Iprice);
            v.add(tot);
            DefaultTableModel dt = (DefaultTableModel)BillTbl.getModel();
            dt.addRow(v);
            total = total+tot;
            TotAmtlbl.setText(Integer.toString(total));
            

        }
    }//GEN-LAST:event_AddToOrderActionPerformed

    private void AddToOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddToOrderMouseClicked
        /*if(ProdId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Enter the Product to be deleted");
        }
        else{
            try{
                Con =DriverManager.getConnection("jdbc:derby://localhost:1527/Inventorydb","User1","1212");
                String Id = ProdId.getText();
                String Check= "select * from User1.PRODUCT where PRODID ="+Id;
                Statement Add = Con.createStatement();
                ResultSet rs= Add.executeQuery(Check);
                if(rs.next()){
                    String Query  = "delete from User1.PRODUCT where PRODID ="+Id;
                    Add.executeUpdate(Query);
                    SelectProd();
                    JOptionPane.showMessageDialog(this,"Product deleted Successfully");
                }else{
                    JOptionPane.showMessageDialog(this,"Product Doesn't exist");
                }
            }catch (SQLException e){
                e.printStackTrace();
            }
        }*/
    }//GEN-LAST:event_AddToOrderMouseClicked

    private void QtytbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QtytbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QtytbActionPerformed

    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
        var model = (DefaultTableModel)CustomerTable.getModel();
        int Myindex = CustomerTable.getSelectedRow();
        custid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        CustNamelbl.setText(model.getValueAt(Myindex,1).toString());
    }//GEN-LAST:event_CustomerTableMouseClicked

    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
         var model = (DefaultTableModel)ProductTable.getModel();
        int Myindex = ProductTable.getSelectedRow();
        i = Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName= model.getValueAt(Myindex,1).toString();
        Iprice =Float.valueOf(model.getValueAt(Myindex,2).toString());
        
        flag = 1;
    }//GEN-LAST:event_ProductTableMouseClicked

    private void ordersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordersButtonActionPerformed
        CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
        cardLayout.show(cardPanel1, "Orders");
    }//GEN-LAST:event_ordersButtonActionPerformed

    private void cusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cusButtonActionPerformed
        CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
        cardLayout.show(cardPanel1," Customer");
    }//GEN-LAST:event_cusButtonActionPerformed

    private void itemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemNameActionPerformed

    private void pricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricActionPerformed

    private void AddItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemMouseClicked
         try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            PreparedStatement add = Con.prepareStatement("INSERT INTO item (itemname, price) VALUES (?, ?)");
            add.setString(1, itemName.getText());
            add.setFloat(2, Float.parseFloat(pric.getText()));
            add.executeUpdate();
            JOptionPane.showMessageDialog(this,"Item Sucessfully Added");
            Con.close();
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_AddItemMouseClicked

    private void AddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddItemActionPerformed

    private void DeleteItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteItemMouseClicked
        if(itemName.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Enter the Item to be deleted");
        }
        else{
            try{
                connection =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                String name = itemName.getText();
                String Check = "select * from item where itemname = '"+name+"'";
                Statement Add = connection.createStatement();
                rs = Add.executeQuery(Check);
                if(rs.next()){
                    int id = rs.getInt("itemid");
                    String Query  = "delete from item where itemid='"+id+"'";
                    Add.executeUpdate(Query);
                    JOptionPane.showMessageDialog(this,"Item deleted Successfully");
                    itemName.setText("");
                }else{
                    JOptionPane.showMessageDialog(this,"Item Doesn't exist");
                }
                
            }catch (SQLException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_DeleteItemMouseClicked

    private void DeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteItemActionPerformed

    private void preordersBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preordersBActionPerformed
       CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
       cardLayout.show(cardPanel1, "Preorders");
    }//GEN-LAST:event_preordersBActionPerformed

    private void reportBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
        cardLayout.show(cardPanel1,"report");
    }//GEN-LAST:event_reportBActionPerformed

    private void itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsActionPerformed
        CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
        cardLayout.show(cardPanel1,"Item");
    }//GEN-LAST:event_itemsActionPerformed

    private void ProductTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTable1MouseClicked
        var model = (DefaultTableModel)ProductTable1.getModel();
        int Myindex = ProductTable1.getSelectedRow();
        i = Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName= model.getValueAt(Myindex,1).toString();
        Iprice =Float.valueOf(model.getValueAt(Myindex,2).toString());
        
        flag = 1;
    }//GEN-LAST:event_ProductTable1MouseClicked

    private void CustomerTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTable1MouseClicked
        var model = (DefaultTableModel)CustomerTable1.getModel();
        int Myindex = CustomerTable1.getSelectedRow();
        custid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        CustNamelbl1.setText(model.getValueAt(Myindex,1).toString());
    }//GEN-LAST:event_CustomerTable1MouseClicked

    private void Qtytb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Qtytb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Qtytb1ActionPerformed

    private void AddToOrder1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddToOrder1MouseClicked
        if(flag == 0 || Qtytb1.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Select Product and Enter Quantity");
        }
        else
        {
            
            tot = (int) (Iprice*Integer.valueOf(Qtytb1.getText()));
            Vector v = new Vector();
            v.add(i);
            v.add(ProdName);
            v.add(Qtytb1.getText());
            v.add(Iprice);
            v.add(tot);
            DefaultTableModel dt = (DefaultTableModel)BillTbl1.getModel();
            dt.addRow(v);
            total = total+tot;
            TotAmtlbl.setText(Integer.toString(total));
            

        }
    }//GEN-LAST:event_AddToOrder1MouseClicked

    private void AddToOrder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToOrder1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddToOrder1ActionPerformed

    private void BillTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BillTbl1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BillTbl1MouseClicked

    private void TotAmtlbl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotAmtlbl1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotAmtlbl1ActionPerformed

    private void AddBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtn2ActionPerformed
       BillId3.setText("");
       BillId1.setText("");
       BillId2.setText("");
       DefaultTableModel model = (DefaultTableModel) BillTbl1.getModel();
       model.setRowCount(0);
    }//GEN-LAST:event_AddBtn2ActionPerformed

    private void first_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_first_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_first_nameActionPerformed

    private void last_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_nameActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cityActionPerformed

    private void AddCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddCustomerMouseClicked
         try{
            Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
            PreparedStatement add = Con.prepareStatement("INSERT INTO Customers (FirstName, LastName, PhoneNumber, Email, City)VALUES (?, ?, ?, ?, ?);");
            add.setString(1, first_name.getText());
            add.setString(2, last_name.getText());
            add.setString(3, phone.getText());
            add.setString(4, email.getText());
            add.setString(5, city.getText());
            add.executeUpdate();
            JOptionPane.showMessageDialog(this,"Customer Sucessfully Added");
            
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_AddCustomerMouseClicked

    private void AddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddCustomerActionPerformed

    private void DeleteCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteCustomerMouseClicked
       if(first_name.getText().isEmpty()&& last_name.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Enter the Customer to be deleted");
        }
        else{
            try{
                connection =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                String firtName = first_name.getText();
                String lastName = last_name.getText();
                String Check = "select * from Customers where firstname = '"+first_name+"' and lastname ='"+last_name+"'";
                Statement Add = connection.createStatement();
                rs = Add.executeQuery(Check);
                if(rs.next()){
                    int id = rs.getInt("customerid");
                    String Query  = "delete from Customers where customerid='"+id+"'";
                    Add.executeUpdate(Query);
                    JOptionPane.showMessageDialog(this,"Customer deleted Successfully");
                    first_name.setText("");
                }else{
                    JOptionPane.showMessageDialog(this,"Customer Doesn't exist");
                }
                
            }catch (SQLException e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_DeleteCustomerMouseClicked

    private void DeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteCustomerActionPerformed

    private void cusButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusButtonMouseClicked
        // TODO add your handling code here:
        CardLayout cardLayout = (CardLayout) cardPanel1.getLayout();
        cardLayout.show(cardPanel1, "Customers");
    }//GEN-LAST:event_cusButtonMouseClicked

    private void CustomerTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTable2MouseClicked
        var model = (DefaultTableModel)CustomerTable.getModel();
        int Myindex = CustomerTable.getSelectedRow();
        itemName.setText(model.getValueAt(Myindex,0).toString());
        pric.setText(model.getValueAt(Myindex,1).toString());
        //PhoneNumber.setText(model.getValueAt(Myindex,2).toString());
    }//GEN-LAST:event_CustomerTable2MouseClicked

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
        var model = (DefaultTableModel)ProductTable.getModel();
        int Myindex = ProductTable.getSelectedRow();
        productid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName= model.getValueAt(Myindex,1).toString();
        oldqty=Integer.valueOf(model.getValueAt(Myindex,2).toString());
        //ProdDesc.setText(model.getValueAt(Myindex,3).toString());
        //ProdCat.setSelectedItem(model.getValueAt(Myindex,4));
        flag = 1;
    }//GEN-LAST:event_itemTableMouseClicked

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        var model = (DefaultTableModel)ProductTable.getModel();
        int Myindex = ProductTable.getSelectedRow();
        productid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName= model.getValueAt(Myindex,1).toString();
        oldqty=Integer.valueOf(model.getValueAt(Myindex,2).toString());
        //ProdDesc.setText(model.getValueAt(Myindex,3).toString());
        //ProdCat.setSelectedItem(model.getValueAt(Myindex,4));
        flag = 1;
    }//GEN-LAST:event_orderTableMouseClicked

    private void preorderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preorderTableMouseClicked
        var model = (DefaultTableModel)ProductTable.getModel();
        int Myindex = ProductTable.getSelectedRow();
        productid= Integer.valueOf(model.getValueAt(Myindex,0).toString());
        ProdName= model.getValueAt(Myindex,1).toString();
        oldqty=Integer.valueOf(model.getValueAt(Myindex,2).toString());
        //ProdDesc.setText(model.getValueAt(Myindex,3).toString());
        //ProdCat.setSelectedItem(model.getValueAt(Myindex,4));
        flag = 1;
    }//GEN-LAST:event_preorderTableMouseClicked

    private void AddBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtnMouseClicked
           try{                                         
            String dateString = Datelbl.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date parsedDate = dateFormat.parse(dateString);
            java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());
            List<OrderItems> orderItemsList = new ArrayList() ;
            for (int i = 0; i < BillTbl.getRowCount(); i++) {
            int itemID = (int) BillTbl.getValueAt(i, 0);
            int quantity = (int) Integer.parseInt((String) BillTbl.getValueAt(i, 2));
            int cost = (int) BillTbl.getValueAt(i, 4);

            OrderItems orderItem = new OrderItems(itemID, quantity, cost);
            
            orderItemsList.add(orderItem);
               }
            
            try{
                Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                Connection itemCon = DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                PreparedStatement add = Con.prepareStatement("INSERT INTO Orders (OrderDate, CustomerID, StaffID, PaymentInfo) VALUES (?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
                add.setDate(1, sqlDate);
                add.setInt(2, custid);
                add.setInt(3, Integer.parseInt(staffId1.getText()));
                add.setString(4, pay_info.getText());
                add.executeUpdate();
                ResultSet resultSet = add.getGeneratedKeys();
                while (resultSet.next()){
                int orderID = resultSet.getInt(1);
                for (OrderItems orderItem : orderItemsList) {
                PreparedStatement statement = itemCon.prepareStatement("INSERT INTO order_items (orderid, itemid, quantity, cost) VALUES (?, ?, ?, ?)");
                statement.setInt(1, orderID);
                statement.setInt(2, orderItem.getItemID());
                statement.setInt(3, orderItem.getQuantity());
                statement.setDouble(4, orderItem.getCost());
                statement.executeUpdate();
                }}
                JOptionPane.showMessageDialog(this,"Order Sucessfully Added");
                Con.close();
            }catch(SQLException e){
                e.printStackTrace();
            }
        }catch(ParseException ex){
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddBtnMouseClicked

    private void ViewOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewOrdersMouseClicked
       staffId1.setText("");
       pay_info.setText("");
       CustNamelbl.setText("");
       DefaultTableModel model = (DefaultTableModel) BillTbl.getModel();
       model.setRowCount(0);
    }//GEN-LAST:event_ViewOrdersMouseClicked

    private void AddBtn3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBtn3MouseClicked
        try{                                         
            String dateString = BillId2.getText();
            String date = BillId1.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date parse = dateFormat.parse(date);
            java.sql.Date sq = new java.sql.Date(parse.getTime());
            java.util.Date parsedDate = dateFormat.parse(dateString);
            java.sql.Date sqlDate = new java.sql.Date(parsedDate.getTime());
            List<PreOrder> preorderItemsList = new ArrayList() ;
            for (int i = 0; i < BillTbl1.getRowCount(); i++) {
            int itemID = (int) BillTbl1.getValueAt(i, 0);
            int quantity = (int) Integer.parseInt((String) BillTbl1.getValueAt(i, 2));
            int cost = (int) BillTbl1.getValueAt(i, 4);

            PreOrder preorderItem = new PreOrder(itemID, quantity, cost);
            
            preorderItemsList.add(preorderItem);
               }
            
            try{
                Con =DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                Connection itemCon = DriverManager.getConnection("jdbc:postgresql://localhost:5432/AmazingDessertBar", "postgres", "1234");
                PreparedStatement add = Con.prepareStatement("INSERT INTO pre_orders ( PreOrderDate, CustomerID, CollectionDate, StaffID) VALUES ( ?, ?, ?, ?);", Statement.RETURN_GENERATED_KEYS);
                add.setDate(1, sq);
                add.setInt(2, custid);
                add.setDate(3, sqlDate);
                add.setInt(4, Integer.parseInt(BillId3.getText()));
                add.executeUpdate();
                ResultSet resultSet = add.getGeneratedKeys();
                while (resultSet.next()){
                int orderID = resultSet.getInt(1);
                for (PreOrder preorderItem : preorderItemsList) {
                PreparedStatement statement = itemCon.prepareStatement("INSERT INTO preorder_items (PreOrderID, ItemID, Quantity, Cost) VALUES (?, ?, ?, ?)");
                statement.setInt(1, orderID);
                statement.setInt(2, preorderItem.getItem());
                statement.setInt(3, preorderItem.getQuantity());
                statement.setDouble(4, preorderItem.getCost());
                statement.executeUpdate();
                }}
                JOptionPane.showMessageDialog(this,"Order Sucessfully Added");
                Con.close();
            }catch(SQLException e){
                e.printStackTrace();
            }
        }catch(ParseException ex){
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_AddBtn3MouseClicked

    private void BillId3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BillId3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BillId3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffDashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AddBtn2;
    private javax.swing.JButton AddBtn3;
    private javax.swing.JButton AddCustomer;
    private javax.swing.JButton AddItem;
    private javax.swing.JButton AddToOrder;
    private javax.swing.JButton AddToOrder1;
    private javax.swing.JTextField BillId1;
    private javax.swing.JTextField BillId2;
    private javax.swing.JTextField BillId3;
    private javax.swing.JTable BillTbl;
    private javax.swing.JTable BillTbl1;
    private javax.swing.JTextField CustNamelbl;
    private javax.swing.JTextField CustNamelbl1;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTable CustomerTable1;
    private javax.swing.JTable CustomerTable2;
    private javax.swing.JTextField Datelbl;
    private javax.swing.JButton DeleteCustomer;
    private javax.swing.JButton DeleteItem;
    private javax.swing.JTable ProductTable;
    private javax.swing.JTable ProductTable1;
    private javax.swing.JTextField Qtytb;
    private javax.swing.JTextField Qtytb1;
    private javax.swing.JTextField TotAmtlbl;
    private javax.swing.JTextField TotAmtlbl1;
    private javax.swing.JButton ViewOrders;
    private javax.swing.JPanel canvas;
    private javax.swing.JPanel cardPanel1;
    private javax.swing.JTextField city;
    private javax.swing.JButton cusButton;
    private javax.swing.JPanel customerPanel1;
    private javax.swing.JTextField email;
    private javax.swing.JTextField first_name;
    private javax.swing.JTextField itemName;
    private javax.swing.JPanel itemPanel1;
    private javax.swing.JTable itemTable;
    private javax.swing.JButton items;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField last_name;
    private javax.swing.JPanel orderPanel1;
    private javax.swing.JTable orderTable;
    private javax.swing.JButton ordersButton;
    private javax.swing.JTextField pay_info;
    private javax.swing.JTextField phone;
    private javax.swing.JPanel preorder;
    private javax.swing.JTable preorderTable;
    private javax.swing.JButton preordersB;
    private javax.swing.JTextField pric;
    private javax.swing.JButton reportB;
    private javax.swing.JTabbedPane reports;
    private javax.swing.JPanel sideBar;
    private javax.swing.JTextField staffId1;
    // End of variables declaration//GEN-END:variables
}
